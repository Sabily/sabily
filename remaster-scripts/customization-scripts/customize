#!/bin/bash

function failure()
{
	echo "$@"
	exit 1
}

function prepare_install()
{
	sed -i "s|# deb http://archive.ubuntu.com/ubuntu hardy universe|deb http://archive.ubuntu.com/ubuntu hardy universe multiverse|" /etc/apt/sources.list ||  failure "sed failed, error=$?"
	sed -i "s|# deb-src http://archive.ubuntu.com/ubuntu hardy universe|deb-src http://archive.ubuntu.com/ubuntu hardy universe multiverse|" /etc/apt/sources.list 
	
	# Add ubuntuME repository
	if grep -q "http://ppa.launchpad.net/ubuntume.team/ubuntu" "/etc/apt/sources.list" ; then EXISTS="yes"
	else
		echo "deb http://ppa.launchpad.net/ubuntume.team/ubuntu hardy main #Ubuntu Muslim Edition" >> "/etc/apt/sources.list"
		echo "deb-src http://ppa.launchpad.net/ubuntume.team/ubuntu hardy main #Ubuntu Muslim Edition" >> "/etc/apt/sources.list"
	fi
	
	#try 2 times to avoid slow proxies failures
	aptitude update || aptitude update || failure "aptitude update failed, error=$?"
}

function install_packages()
{
	aptitude install --assume-yes "$@" || failure "aptitude install $@ failed, error=$?"
}

function install_packages_with_recommends()
{
	aptitude install --assume-yes --with-recommends "$@" || failure "aptitude install $@ failed, error=$?"
}

function remove_packages()
{
	aptitude remove --assume-yes "$@" || failure "aptitude remove $@ failed, error=$?"
}

function run_package_manager()
{
	echo "Starting package application..."
	
	PACKAGE_APP=`which adept`
	PACKAGE_APP_OPTIONS=(--caption "UCK Package Manager")
	if [ "$PACKAGE_APP" = "" ]; then
		PACKAGE_APP=`which adept_manager`
	fi
	if [ "$PACKAGE_APP" = "" ]; then
		PACKAGE_APP=`which synaptic`
		PACKAGE_APP_OPTIONS=(-t "UCK Package manager")
	fi
	
	if [ "$PACKAGE_APP" = "" ]; then
		dialog_msgbox "Failure" "Unable to find any package manager application"
	else
		$PACKAGE_APP "${PACKAGE_APP_OPTIONS[@]}"
		RESULT=$?
	
		if [ $RESULT -ne 0 ]; then
			dialog_msgbox "Failure" "Running package application $PACKAGE_APP failed, error=$RESULT"
		fi
	fi
}

function run_console()
{
	echo "Starting console application..."
	
	CONSOLE_APP=`which konsole`
	CONSOLE_APP_OPTIONS=(--caption "UCK customization console" -e /bin/bash)
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which gnome-terminal`
		CONSOLE_APP_OPTIONS=(-t "UCK customization console" -e /bin/bash)
	fi
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which xfce4-terminal`
		CONSOLE_APP_OPTIONS=(-t "UCK customization console" -e /bin/bash)
	fi
	if [ "$CONSOLE_APP" = "" ]; then
		CONSOLE_APP=`which xterm`
		CONSOLE_APP_OPTIONS=(-title "UCK customization console" -e /bin/bash)
	fi
	
	if [ "$CONSOLE_APP" = "" ]; then
		dialog_msgbox "Failure" "Unable to find any console application"
	else
		$CONSOLE_APP "${CONSOLE_APP_OPTIONS[@]}"
		RESULT=$?
	
		if [ $RESULT -ne 0 ]; then
			dialog_msgbox "Failure" "Running console application $CONSOLE_APP failed, error=$RESULT"
		fi
	fi
}

SCRIPT_DIR=`dirname "$0"`
. "$SCRIPT_DIR/gui.sh"

LIVECD_LANGS=`cat "$SCRIPT_DIR/language_packs"`
RUN_MANUAL_CUSTOMIZATIONS=`cat "$SCRIPT_DIR/run_manual_customizations"`
DESKTOP_TYPE=`cat "$SCRIPT_DIR/desktop_type"`

if [ -z "$LIVECD_LANGS" ]; then
	failure "Live CD language not set, please put language packs codes (for example: en, pl, fr) into $SCRIPT_DIR/language_packs"
fi

DESKTOP_FLAVOURS=`cat "$SCRIPT_DIR/desktop_types"`

prepare_install || failure "Preparing installation failed, error=$?"

#echo "Installing language packs ($LIVECD_LANGS)..."
#echo "Installing language packs..."

PACKAGES_TO_INSTALL=""
LANGPACKS_CONCATENATED=""

for LANGPACK in $LIVECD_LANGS; do
	PACKAGES_TO_INSTALL="$PACKAGES_TO_INSTALL language-pack-$LANGPACK language-support-$LANGPACK"
	if [ "$DESKTOP_FLAVOURS" ]; then
		for FLAVOUR in $DESKTOP_FLAVOURS; do
			if [ $FLAVOUR == "gnome" ] || [ $FLAVOUR == "kde" ]; then
				PACKAGES_TO_INSTALL="$PACKAGES_TO_INSTALL language-pack-$FLAVOUR-$LANGPACK"
			fi
		done
	fi

	if [ -z "$LANGPACKS_CONCATENATED" ]; then
		LANGPACKS_CONCATENATED="$LANGPACK"
	else
		LANGPACKS_CONCATENATED="$LANGPACKS_CONCATENATED|$LANGPACK"
	fi
done

#install_packages $PACKAGES_TO_INSTALL || failure "Installing language packs failed, error=$?"

#NOTE: we first install language pack, then remove others as installing language pack might pull packages
#which were not previously present
#echo "Removing unnecessary language packages..."
#REMOVED_PACKAGES=`dpkg-query --show | cut -f1 | grep -E '^(language-pack|language-support)' | grep -v -E "[-]($LANGPACKS_CONCATENATED)\>"`
#remove_packages $REMOVED_PACKAGES || failure "Removing packages failed, error=$?"
#echo "removed: $REMOVED_PACKAGES"

#######################################
# UBUNTUME customizations
#######################################

echo --------- remove wallpapers, example-content, openoffice, games ---------
remove_packages gnome-games gnome-games-data ubuntu-wallpapers example-content openoffice.org-base-core openoffice.org-hyphenation openoffice.org-base openoffice.org-calc openoffice.org-common  openoffice.org-draw openoffice.org-evolution openoffice.org-gnome openoffice.org-gtk openoffice.org-impress openoffice.org-java-common openoffice.org-math openoffice.org-writer python-uno openoffice.org openoffice.org-core openoffice.org-l10n-common openoffice.org-filter-binfilter openoffice.org-help-en-us openoffice.org-style-human language-support-translations-en  || failure "Removing packages failed, error=$?"

echo --------- install sun-java, ubuntume, webstrict ---------
install_packages_with_recommends sun-java6-jre ubuntume webstrict || failure "Installing packages failed, error=$?"

echo --------- install miscellaneous ---------
install_packages bzr aptoncd aspell-ar acon || failure "Installing packages failed, error=$?"

echo --------- install Zekr online recitations ---------
install_packages zekr-quran-recitation-online-huzaifi zekr-quran-recitation-online-husary zekr-quran-recitation-online-shuraim zekr-quran-recitation-online-ajmy zekr-quran-recitation-online-afasi zekr-quran-recitation-online-abdulbasit zekr-quran-recitation-online-ghamdi zekr-quran-recitation-online-shatri zekr-quran-recitation-online-ayyub || failure "Installing packages failed, error=$?" 

echo --------- install Zekr Quran translations ---------
install_packages zekr-quran-translation-bs-korkut zekr-quran-translation-de-bubenheimelyas zekr-quran-translation-de-muhammadibnrassoul zekr-quran-translation-de-zaidan zekr-quran-translation-en-pickthall zekr-quran-translation-en-qaribullah zekr-quran-translation-en-shakir zekr-quran-translation-en-yusufali zekr-quran-translation-es-cortes zekr-quran-translation-fa-ansarian zekr-quran-translation-fa-ghomshei zekr-quran-translation-fa-makarem zekr-quran-translation-fr-hamidullah zekr-quran-translation-id-indonesian zekr-quran-translation-it-piccardo zekr-quran-translation-nl-keyzer zekr-quran-translation-pt-elhayek zekr-quran-translation-ru-kuliev zekr-quran-translation-ru-osmanov zekr-quran-translation-ru-porokhova zekr-quran-translation-tr-diyanet zekr-quran-translation-tr-ozturk zekr-quran-translation-tt-noghmani zekr-quran-translation-ur-irfanulquran zekr-quran-translation-ur-jalandhry zekr-quran-translation-ur-kanzuliman   || failure "Installing packages failed, error=$?"

echo --------- clean-up ---------
aptitude clean
aptitude autoclean

echo --------- download and install dansguardian blacklists ---------
rm -rf /etc/dansguardian/blacklists
wget http://squidguard.shalla.de/Downloads/shallalist.tar.gz
tar xzf shallalist.tar.gz -C /etc/dansguardian
mv /etc/dansguardian/BL /etc/dansguardian/blacklists
rm -f shallalist.tar.gz
chown -R root:root /etc/dansguardian/blacklists
chmod -R 755 /etc/dansguardian/blacklists

echo --------- GRUB image ---------
cp /boot/grub/splashimages/medine_moon_right_below.xpm.gz /boot/grub/splash.xpm.gz
update-grub


####################################

if [ "$RUN_MANUAL_CUSTOMIZATIONS" = "yes" ] ; then
	while true ; do
		CHOICE_PACKAGE_MANAGER="Run package manager"
		CHOICE_CONSOLE="Run console application"
		CHOICE_EXIT="Continue building"
		CHOICE=`dialog_menu "Please choose customization action" "$CHOICE_PACKAGE_MANAGER" "$CHOICE_CONSOLE" "$CHOICE_EXIT"`
		RESULT=$?

		if [ $RESULT -ne 0 ] ; then
			failure "Script cancelled by user"
		fi
		#workaround for KDE bug (https://bugs.kde.org/show_bug.cgi?id=139025)
		CHOICE=`echo "$CHOICE" | grep -v -i kwrited | tail -n1`

		echo "CHOICE='$CHOICE'"

		if [ "$CHOICE" = "$CHOICE_EXIT" ] ; then
			break
		elif [ "$CHOICE" = "$CHOICE_PACKAGE_MANAGER" ] ; then
			run_package_manager
		elif [ "$CHOICE" = "$CHOICE_CONSOLE" ] ; then
			run_console
		fi
	done
fi

echo "Done customize.sh"
